{"version":3,"file":"encoding.js","sourceRoot":"","sources":["encoding.ts"],"names":["decodeUtf8EncodedCodePoint","validateUtf8EncodedCodePoint","encode","decode"],"mappings":"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","sourcesContent":["import { HIGH_SURROGATE_MIN, HIGH_SURROGATE_MAX, LOW_SURROGATE_MIN, LOW_SURROGATE_MAX } from './string';\n\nconst BASE64_KEYSTR = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction decodeUtf8EncodedCodePoint(codePoint: number, validationRange: number[] = [ 0, Infinity ], checkSurrogate?: boolean): string {\n\tif (codePoint < validationRange[0] || codePoint > validationRange[1]) {\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tif (checkSurrogate && codePoint >= HIGH_SURROGATE_MIN && codePoint <= LOW_SURROGATE_MAX) {\n\t\tthrow Error('Surrogate is not a scalar value');\n\t}\n\n\tlet encoded = '';\n\n\tif (codePoint > 0xFFFF) {\n\t\tcodePoint -= 0x010000;\n\t\tencoded += String.fromCharCode(codePoint >>> 0x10 & 0x03FF | HIGH_SURROGATE_MIN);\n\t\tcodePoint = LOW_SURROGATE_MIN | codePoint & 0x03FF;\n\t}\n\n\tencoded += String.fromCharCode(codePoint);\n\n\treturn encoded;\n}\n\nfunction validateUtf8EncodedCodePoint(codePoint: number): void {\n\tif ((codePoint & 0xC0) !== 0x80) {\n\t\tthrow Error('Invalid continuation byte');\n\t}\n}\n\nexport type ByteBuffer = Uint8Array | Buffer | number[];\n\nexport interface Codec {\n\tencode(data: string): number[];\n\tdecode(data: ByteBuffer): string;\n}\n\n/**\n * Provides facilities for encoding a string into an ASCII-encoded byte buffer and\n * decoding an ASCII-encoded byte buffer into a string.\n */\nexport const ascii: Codec = {\n\t/**\n\t * Encodes a string into an ASCII-encoded byte buffer.\n\t *\n\t * @param data The text string to encode\n\t */\n\tencode(data: string): number[] {\n\t\tif (data == null) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst buffer: number[] = [];\n\n\t\tfor (let i = 0, length = data.length; i < length; i++) {\n\t\t\tbuffer[i] = data.charCodeAt(i);\n\t\t}\n\n\t\treturn buffer;\n\t},\n\n\t/**\n\t * Decodes an ASCII-encoded byte buffer into a string.\n\t *\n\t * @param data The byte buffer to decode\n\t */\n\tdecode(data: ByteBuffer): string {\n\t\tif (data == null) {\n\t\t\treturn '';\n\t\t}\n\n\t\tlet decoded = '';\n\n\t\tfor (let i = 0, length = data.length; i < length; i++) {\n\t\t\tdecoded += String.fromCharCode(data[i]);\n\t\t}\n\n\t\treturn decoded;\n\t}\n};\n\n/**\n * Provides facilities for encoding a string into a Base64-encoded byte buffer and\n * decoding a Base64-encoded byte buffer into a string.\n */\nexport const base64: Codec = {\n\t/**\n\t * Encodes a Base64-encoded string into a Base64 byte buffer.\n\t *\n\t * @param data The Base64-encoded string to encode\n\t */\n\tencode(data: string): number[] {\n\t\tif (data == null) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst buffer: number[] = [];\n\n\t\tlet i = 0;\n\t\tlet length = data.length;\n\n\t\twhile (data[--length] === '=') { }\n\t\twhile (i < length) {\n\t\t\tlet encoded = BASE64_KEYSTR.indexOf(data[i++]) << 18;\n\t\t\tif (i <= length) {\n\t\t\t\tencoded |= BASE64_KEYSTR.indexOf(data[i++]) << 12;\n\t\t\t}\n\t\t\tif (i <= length) {\n\t\t\t\tencoded |= BASE64_KEYSTR.indexOf(data[i++]) << 6;\n\t\t\t}\n\t\t\tif (i <= length) {\n\t\t\t\tencoded |= BASE64_KEYSTR.indexOf(data[i++]);\n\t\t\t}\n\n\t\t\tbuffer.push((encoded >>> 16) & 0xff);\n\t\t\tbuffer.push((encoded >>> 8) & 0xff);\n\t\t\tbuffer.push(encoded & 0xff);\n\t\t}\n\n\t\twhile (buffer[buffer.length - 1] === 0) {\n\t\t\tbuffer.pop();\n\t\t}\n\n\t\treturn buffer;\n\t},\n\n\t/**\n\t * Decodes a Base64-encoded byte buffer into a Base64-encoded string.\n\t *\n\t * @param data The byte buffer to decode\n\t */\n\tdecode(data: ByteBuffer): string {\n\t\tif (data == null) {\n\t\t\treturn '';\n\t\t}\n\n\t\tlet decoded = '';\n\t\tlet i = 0;\n\n\t\tfor (let length = data.length - (data.length % 3); i < length; ) {\n\t\t\tlet encoded = data[i++] << 16 | data[i++] << 8 | data[i++];\n\n\t\t\tdecoded += BASE64_KEYSTR.charAt((encoded >>> 18) & 0x3F);\n\t\t\tdecoded += BASE64_KEYSTR.charAt((encoded >>> 12) & 0x3F);\n\t\t\tdecoded += BASE64_KEYSTR.charAt((encoded >>> 6) & 0x3F);\n\t\t\tdecoded += BASE64_KEYSTR.charAt(encoded & 0x3F);\n\t\t}\n\n\t\tif (data.length % 3 === 1) {\n\t\t\tlet encoded = data[i++] << 16;\n\t\t\tdecoded += BASE64_KEYSTR.charAt((encoded >>> 18) & 0x3f);\n\t\t\tdecoded += BASE64_KEYSTR.charAt((encoded >>> 12) & 0x3f);\n\t\t\tdecoded += '==';\n\t\t}\n\t\telse if (data.length % 3 === 2) {\n\t\t\tlet encoded = data[i++] << 16 | data[i++] << 8;\n\t\t\tdecoded += BASE64_KEYSTR.charAt((encoded >>> 18) & 0x3f);\n\t\t\tdecoded += BASE64_KEYSTR.charAt((encoded >>> 12) & 0x3f);\n\t\t\tdecoded += BASE64_KEYSTR.charAt((encoded >>> 6) & 0x3f);\n\t\t\tdecoded += '=';\n\t\t}\n\n\t\treturn decoded;\n\t}\n};\n\n/**\n * Provides facilities for encoding a string into a hex-encoded byte buffer and\n * decoding a hex-encoded byte buffer into a string.\n */\nexport const hex: Codec = {\n\t/**\n\t * Encodes a string into a hex-encoded byte buffer.\n\t *\n\t * @param data The hex-encoded string to encode\n\t */\n\tencode(data: string): number[] {\n\t\tif (data == null) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst buffer: number[] = [];\n\n\t\tfor (let i = 0, length = data.length; i < length; i += 2) {\n\t\t\tlet encodedChar = parseInt(data.substr(i, 2), 16);\n\n\t\t\tbuffer.push(encodedChar);\n\t\t}\n\n\t\treturn buffer;\n\t},\n\n\t/**\n\t * Decodes a hex-encoded byte buffer into a hex-encoded string.\n\t *\n\t * @param data The byte buffer to decode\n\t */\n\tdecode(data: ByteBuffer): string {\n\t\tif (data == null) {\n\t\t\treturn '';\n\t\t}\n\n\t\tlet decoded = '';\n\n\t\tfor (let i = 0, length = data.length; i < length; i++) {\n\t\t\tdecoded += data[i].toString(16).toUpperCase();\n\t\t}\n\n\t\treturn decoded;\n\t}\n};\n\n/**\n * Provides facilities for encoding a string into a UTF-8-encoded byte buffer and\n * decoding a UTF-8-encoded byte buffer into a string.\n * Inspired by the work of: https://github.com/mathiasbynens/utf8.js\n */\nexport const utf8: Codec = {\n\t/**\n\t * Encodes a string into a UTF-8-encoded byte buffer.\n\t *\n\t * @param data The text string to encode\n\t */\n\tencode(data: string): number[] {\n\t\tif (data == null) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst buffer: number[] = [];\n\n\t\tfor (let i = 0, length = data.length; i < length; i++) {\n\t\t\tlet encodedChar = data.charCodeAt(i);\n\n\t\t\t/**\n\t\t\t * Surrogates\n\t\t\t * http://en.wikipedia.org/wiki/Universal_Character_Set_characters\n\t\t\t */\n\t\t\tif (encodedChar >= HIGH_SURROGATE_MIN && encodedChar <= HIGH_SURROGATE_MAX) {\n\t\t\t\tlet lowSurrogate = data.charCodeAt(i + 1);\n\t\t\t\tif (lowSurrogate >= LOW_SURROGATE_MIN && lowSurrogate <= LOW_SURROGATE_MAX) {\n\t\t\t\t\tencodedChar = 0x010000 + (encodedChar - HIGH_SURROGATE_MIN) * 0x0400 + (lowSurrogate - LOW_SURROGATE_MIN);\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (encodedChar < 0x80) {\n\t\t\t\tbuffer.push(encodedChar);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (encodedChar < 0x800) {\n\t\t\t\t\tbuffer.push(((encodedChar >> 0x06) & 0x1F) | 0xC0);\n\t\t\t\t}\n\t\t\t\telse if (encodedChar < 0x010000) {\n\t\t\t\t\tif (encodedChar >= HIGH_SURROGATE_MIN && encodedChar <= LOW_SURROGATE_MAX) {\n\t\t\t\t\t\tthrow Error('Surrogate is not a scalar value');\n\t\t\t\t\t}\n\n\t\t\t\t\tbuffer.push(((encodedChar >> 0x0C) & 0x0F) | 0xE0);\n\t\t\t\t\tbuffer.push(((encodedChar >> 0x06) & 0x3F) | 0x80);\n\t\t\t\t}\n\t\t\t\telse if (encodedChar < 0x200000) {\n\t\t\t\t\tbuffer.push(((encodedChar >> 0x12) & 0x07) | 0xF0);\n\t\t\t\t\tbuffer.push(((encodedChar >> 0x0C) & 0x3F) | 0x80);\n\t\t\t\t\tbuffer.push(((encodedChar >> 0x06) & 0x3F) | 0x80);\n\t\t\t\t}\n\t\t\t\tbuffer.push((encodedChar & 0x3F) | 0x80);\n\t\t\t}\n\t\t}\n\n\t\treturn buffer;\n\t},\n\n\t/**\n\t * Decodes a UTF-8-encoded byte buffer into a string.\n\t *\n\t * @param data The byte buffer to decode\n\t */\n\tdecode(data: ByteBuffer): string {\n\t\tif (data == null) {\n\t\t\treturn '';\n\t\t}\n\n\t\tlet decoded = '';\n\n\t\tfor (let i = 0, length = data.length; i < length; i++) {\n\t\t\tlet byte1 = data[i] & 0xFF;\n\n\t\t\tif ((byte1 & 0x80) === 0) {\n\t\t\t\tdecoded += decodeUtf8EncodedCodePoint(byte1);\n\t\t\t}\n\t\t\telse if ((byte1 & 0xE0) === 0xC0) {\n\t\t\t\tlet byte2 = data[++i] & 0xFF;\n\t\t\t\tvalidateUtf8EncodedCodePoint(byte2);\n\t\t\t\tbyte2 = byte2 & 0x3F;\n\t\t\t\tlet encodedByte = ((byte1 & 0x1F) << 0x06) | byte2;\n\t\t\t\tdecoded += decodeUtf8EncodedCodePoint(encodedByte, [0x80, Infinity]);\n\t\t\t}\n\t\t\telse if ((byte1 & 0xF0) === 0xE0) {\n\t\t\t\tlet byte2 = data[++i] & 0xFF;\n\t\t\t\tvalidateUtf8EncodedCodePoint(byte2);\n\t\t\t\tbyte2 = byte2 & 0x3F;\n\n\t\t\t\tlet byte3 = data[++i] & 0xFF;\n\t\t\t\tvalidateUtf8EncodedCodePoint(byte3);\n\t\t\t\tbyte3 = byte3 & 0x3F;\n\n\t\t\t\tlet encodedByte = ((byte1 & 0x1F) << 0x0C) | (byte2 << 0x06) | byte3;\n\t\t\t\tdecoded += decodeUtf8EncodedCodePoint(encodedByte, [ 0x0800, Infinity ], true);\n\t\t\t}\n\t\t\telse if ((byte1 & 0xF8) === 0xF0) {\n\t\t\t\tlet byte2 = data[++i] & 0xFF;\n\t\t\t\tvalidateUtf8EncodedCodePoint(byte2);\n\t\t\t\tbyte2 = byte2 & 0x3F;\n\n\t\t\t\tlet byte3 = data[++i] & 0xFF;\n\t\t\t\tvalidateUtf8EncodedCodePoint(byte3);\n\t\t\t\tbyte3 = byte3 & 0x3F;\n\n\t\t\t\tlet byte4 = data[++i] & 0xFF;\n\t\t\t\tvalidateUtf8EncodedCodePoint(byte4);\n\t\t\t\tbyte4 = byte4 & 0x3F;\n\n\t\t\t\tlet encodedByte = ((byte1 & 0x1F) << 0x0C) | (byte2 << 0x0C) | (byte3 << 0x06) | byte4;\n\t\t\t\tdecoded += decodeUtf8EncodedCodePoint(encodedByte, [ 0x010000, 0x10FFFF ]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvalidateUtf8EncodedCodePoint(byte1);\n\t\t\t}\n\t\t}\n\n\t\treturn decoded;\n\t}\n};\n"]}