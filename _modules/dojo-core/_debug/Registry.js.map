{"version":3,"file":"Registry.js","sourceRoot":"","sources":["Registry.ts"],"names":["Registry","Registry.constructor","Registry.match","Registry.register"],"mappings":";;;;;;;;IAWA;;OAEG;IACH;QAICA;;WAEGA;QACHA,kBAAYA,YAAgBA;YAC3BC,IAAIA,CAACA,aAAaA,GAAGA,YAAYA,CAACA;YAClCA,IAAIA,CAACA,QAAQA,GAAGA,EAAEA,CAACA;QACpBA,CAACA;QAEDD;;;;;;WAMGA;QACHA,wBAAKA,GAALA;YAAME,cAAcA;iBAAdA,WAAcA,CAAdA,sBAAcA,CAAdA,IAAcA;gBAAdA,6BAAcA;;YACnBA,IAAIA,OAAOA,GAAGA,IAAIA,CAACA,QAAQA,CAACA,KAAKA,CAACA,CAACA,CAACA,CAACA;YACrCA,IAAIA,KAAeA,CAACA;YAEpBA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,EAAEA,CAACA,KAAKA,GAAGA,OAAOA,CAACA,CAACA,CAACA,CAACA,EAAEA,EAAEA,CAACA,EAAEA,CAACA;gBAC3CA,EAAEA,CAACA,CAACA,KAAKA,CAACA,IAAIA,CAACA,KAAKA,CAACA,IAAIA,EAAEA,IAAIA,CAACA,CAACA,CAACA,CAACA;oBAClCA,MAAMA,CAACA,KAAKA,CAACA,KAAKA,CAACA;gBACpBA,CAACA;YACFA,CAACA;YAEDA,EAAEA,CAACA,CAACA,IAAIA,CAACA,aAAaA,KAAKA,SAASA,CAACA,CAACA,CAACA;gBACtCA,MAAMA,CAACA,IAAIA,CAACA,aAAaA,CAACA;YAC3BA,CAACA;YAEDA,MAAMA,IAAIA,KAAKA,CAACA,gBAAgBA,CAACA,CAACA;QACnCA,CAACA;QAEDF;;;;;;WAMGA;QACHA,2BAAQA,GAARA,UAASA,IAAUA,EAAEA,KAAQA,EAAEA,KAAeA;YAC7CG,IAAIA,OAAOA,GAAGA,IAAIA,CAACA,QAAQA,CAACA;YAC5BA,IAAIA,KAAKA,GAAaA;gBACrBA,IAAIA,EAAEA,IAAIA;gBACVA,KAAKA,EAAEA,KAAKA;aACZA,CAACA;YAEKA,OAAQA,CAACA,CAACA,KAAKA,GAAGA,SAASA,GAAGA,MAAMA,CAACA,CAACA,CAACA,KAAKA,CAACA,CAACA;YAErDA,MAAMA,CAACA;gBACNA,OAAOA,EAAEA;oBACR,IAAI,CAAC,OAAO,GAAG,cAAmB,CAAC,CAAC;oBACpC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACV,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;wBAC7C,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBACtB,CAAC;oBACD,IAAI,GAAG,KAAK,GAAG,OAAO,GAAG,KAAK,GAAG,IAAI,CAAC;gBACvC,CAAC;aACDA,CAACA;QACHA,CAACA;QACFH,eAACA;IAADA,CAACA,AA/DD,IA+DC;IA/DD;8BA+DC,CAAA","sourcesContent":["import { Handle } from './interfaces';\n\n/**\n * An entry in a Registry. Each Entry contains a test to determine whether the Entry is applicable, and a value for the\n * entry.\n */\ninterface Entry<T> {\n\ttest: Test;\n\tvalue: T;\n}\n\n/**\n * A registry of values tagged with matchers.\n */\nexport default class Registry<T> {\n\tprotected _defaultValue: T;\n\tprivate _entries: Entry<T>[];\n\n\t/**\n\t * Construct a new Registry, optionally containing a given default value.\n\t */\n\tconstructor(defaultValue?: T) {\n\t\tthis._defaultValue = defaultValue;\n\t\tthis._entries = [];\n\t}\n\n\t/**\n\t * Return the first entry in this registry that matches the given arguments. If no entry matches and the registry\n\t * was created with a default value, that value will be returned. Otherwise, an exception is thrown.\n\t *\n\t * @param ...args Arguments that will be used to select a matching value.\n\t * @returns the matching value, or a default value if one exists.\n\t */\n\tmatch(...args: any[]): T {\n\t\tlet entries = this._entries.slice(0);\n\t\tlet entry: Entry<T>;\n\n\t\tfor (let i = 0; (entry = entries[i]); ++i) {\n\t\t\tif (entry.test.apply(null, args)) {\n\t\t\t\treturn entry.value;\n\t\t\t}\n\t\t}\n\n\t\tif (this._defaultValue !== undefined) {\n\t\t\treturn this._defaultValue;\n\t\t}\n\n\t\tthrow new Error('No match found');\n\t}\n\n\t/**\n\t * Register a test + value pair with this registry.\n\t *\n\t * @param test The test that will be used to determine if the registered value matches a set of arguments.\n\t * @param value A value being registered.\n\t * @param first If true, the newly registered test and value will be the first entry in the registry.\n\t */\n\tregister(test: Test, value: T, first?: boolean): Handle {\n\t\tlet entries = this._entries;\n\t\tlet entry: Entry<T> = {\n\t\t\ttest: test,\n\t\t\tvalue: value\n\t\t};\n\n\t\t(<any> entries)[(first ? 'unshift' : 'push')](entry);\n\n\t\treturn {\n\t\t\tdestroy: function () {\n\t\t\t\tthis.destroy = function (): void {};\n\t\t\t\tlet i = 0;\n\t\t\t\twhile ((i = entries.indexOf(entry, i)) > -1) {\n\t\t\t\t\tentries.splice(i, 1);\n\t\t\t\t}\n\t\t\t\ttest = value = entries = entry = null;\n\t\t\t}\n\t\t};\n\t}\n}\n\n/**\n * The interface that a test function must implement.\n */\nexport interface Test {\n\t(...args: any[]): boolean;\n}\n"]}