{"version":3,"file":"util.js","sourceRoot":"","sources":["util.ts"],"names":["generateRequestUrl"],"mappings":";;;;;;;;IACA,gCAA4B,oBAAoB,CAAC,CAAA;IAEjD;;;;;OAKG;IACH,4BAAmC,GAAW,EAAE,OAAuB;QACtEA,IAAIA,KAAKA,GAAGA,IAAIA,yBAAeA,CAACA,OAAOA,CAACA,KAAKA,CAACA,CAACA,QAAQA,EAAEA,CAACA;QAE1DA,EAAEA,CAACA,CAACA,OAAOA,CAACA,SAASA,CAACA,CAACA,CAACA;YACvBA,IAAMA,SAASA,GAAGA,MAAMA,CAACA,IAAIA,CAACA,GAAGA,EAAEA,CAACA,CAACA;YACrCA,KAAKA,IAAIA,KAAKA,GAAGA,GAAGA,GAAGA,SAASA,GAAGA,SAASA,CAACA;QAC9CA,CAACA;QAEDA,IAAMA,SAASA,GAAGA,GAAGA,CAACA,OAAOA,CAACA,GAAGA,CAACA,GAAGA,CAACA,CAACA,GAAGA,GAAGA,GAAGA,GAAGA,CAACA;QACpDA,MAAMA,CAACA,KAAKA,GAAGA,GAAGA,GAAGA,SAASA,GAAGA,KAAKA,GAAGA,GAAGA,CAACA;IAC9CA,CAACA;IAVe,0BAAkB,qBAUjC,CAAA","sourcesContent":["import { RequestOptions } from '../request';\nimport UrlSearchParams from '../UrlSearchParams';\n\n/**\n * Returns a URL formatted with optional query string and cache-busting segments.\n *\n * @param url The base URL.\n * @param options The options hash that is used to generate the query string.\n */\nexport function generateRequestUrl(url: string, options: RequestOptions): string {\n\tlet query = new UrlSearchParams(options.query).toString();\n\n\tif (options.cacheBust) {\n\t\tconst cacheBust = String(Date.now());\n\t\tquery += query ? '&' + cacheBust : cacheBust;\n\t}\n\n\tconst separator = url.indexOf('?') > -1 ? '&' : '?';\n\treturn query ? url + separator + query : url;\n}\n"]}