{"version":3,"file":"lang.js","sourceRoot":"","sources":["lang.ts"],"names":["isObject","copyArray","_mixin","create","deepAssign","deepMixin","duplicate","isIdentical","lateBind","mixin","observe","partial","createHandle","createCompositeHandle"],"mappings":";;;;;;;;IAAA,oBAAgB,OAAO,CAAC,CAAA;IAGxB,IAAY,cAAc,WAAM,4BAA4B,CAAC,CAAA;IAE7D,IAAM,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC;IACpC,IAAM,cAAc,GAAG,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC;IAEvD,kBAAkB,IAAS;QAC1BA,MAAMA,CAACA,MAAMA,CAACA,SAASA,CAACA,QAAQA,CAACA,IAAIA,CAACA,IAAIA,CAACA,KAAKA,iBAAiBA,CAACA;IACnEA,CAACA;IAED,mBAAmB,KAAY,EAAE,SAAkB;QAClDC,MAAMA,CAACA,KAAKA,CAACA,GAAGA,CAACA,UAAUA,IAASA;YACnC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACzB,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YACnC,CAAC;YAED,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC;gBACrB,IAAI;gBACJ,MAAM,CAAC;oBACN,IAAI,EAAE,IAAI;oBACV,SAAS,EAAE,SAAS;oBACpB,OAAO,EAAE,CAAE,IAAI,CAAE;oBACjB,MAAM,EAAE,EAAE;iBACV,CAAC,CAAC;QACL,CAAC,CAACA,CAACA;IACJA,CAACA;IASD,gBAAgB,MAAiB;QAChCC,IAAMA,IAAIA,GAAGA,MAAMA,CAACA,IAAIA,CAACA;QACzBA,IAAMA,SAASA,GAAGA,MAAMA,CAACA,SAASA,CAACA;QACnCA,IAAMA,MAAMA,GAAGA,MAAMA,CAACA,MAAMA,CAACA;QAE7BA,GAAGA,CAACA,CAAeA,UAAcA,EAAdA,KAAAA,MAAMA,CAACA,OAAOA,EAA5BA,cAAUA,EAAVA,IAA4BA,CAACA;YAA7BA,IAAIA,MAAMA,SAAAA;YACdA,GAAGA,CAACA,CAACA,GAAGA,CAACA,GAAGA,IAAIA,MAAMA,CAACA,CAACA,CAACA;gBACxBA,EAAEA,CAACA,CAACA,SAASA,IAAIA,cAAcA,CAACA,IAAIA,CAACA,MAAMA,EAAEA,GAAGA,CAACA,CAACA,CAACA,CAACA;oBACnDA,IAAIA,KAAKA,GAAeA,MAAOA,CAACA,GAAGA,CAACA,CAACA;oBAErCA,EAAEA,CAACA,CAACA,IAAIA,CAACA,CAACA,CAACA;wBACVA,EAAEA,CAACA,CAACA,KAAKA,CAACA,OAAOA,CAACA,KAAKA,CAACA,CAACA,CAACA,CAACA;4BAC1BA,KAAKA,GAAGA,SAASA,CAACA,KAAKA,EAAEA,SAASA,CAACA,CAACA;wBACrCA,CAACA;wBACDA,IAAIA,CAACA,EAAEA,CAACA,CAACA,QAAQA,CAACA,KAAKA,CAACA,CAACA,CAACA,CAACA;4BAC1BA,KAAKA,GAAGA,MAAMA,CAACA;gCACdA,IAAIA,EAAEA,IAAIA;gCACVA,SAASA,EAAEA,SAASA;gCACpBA,OAAOA,EAAEA,CAAEA,KAAKA,CAAEA;gCAClBA,MAAMA,EAAEA,EAAEA;6BACVA,CAACA,CAACA;wBACJA,CAACA;oBACFA,CAACA;oBAEMA,MAAOA,CAACA,GAAGA,CAACA,GAAGA,KAAKA,CAACA;gBAC7BA,CAACA;YACFA,CAACA;SACDA;QAEDA,MAAMA,CAACA,MAAMA,CAACA;IACfA,CAACA;IAMD;;;;;;OAMG;IACU,cAAM,GAAG,aAAG,CAAC,eAAe,CAAC;QACd,MAAO,CAAC,MAAM;QACzC,UAAU,MAAU;YAAE,iBAAgB;iBAAhB,WAAgB,CAAhB,sBAAgB,CAAhB,IAAgB;gBAAhB,gCAAgB;;YACrC,MAAM,CAAC,MAAM,CAAC;gBACb,IAAI,EAAE,KAAK;gBACX,SAAS,EAAE,KAAK;gBAChB,OAAO,EAAE,OAAO;gBAChB,MAAM,EAAE,MAAM;aACd,CAAC,CAAC;QACJ,CAAC,CAAC;IAEH;;;;;;;OAOG;IACH,gBAAuB,SAAa;QAAEC,gBAAeA;aAAfA,WAAeA,CAAfA,sBAAeA,CAAfA,IAAeA;YAAfA,+BAAeA;;QACpDA,EAAEA,CAACA,CAACA,CAACA,MAAMA,CAACA,MAAMA,CAACA,CAACA,CAACA;YACpBA,MAAMA,IAAIA,UAAUA,CAACA,iDAAiDA,CAACA,CAACA;QACzEA,CAACA;QAEDA,IAAMA,IAAIA,GAAGA,MAAMA,CAACA,KAAKA,EAAEA,CAACA;QAC5BA,IAAIA,CAACA,OAAOA,CAACA,MAAMA,CAACA,MAAMA,CAACA,SAASA,CAACA,CAACA,CAACA;QAEvCA,MAAMA,CAACA,cAAMA,CAACA,KAAKA,CAACA,IAAIA,EAAEA,IAAIA,CAACA,CAACA;IACjCA,CAACA;IATe,cAAM,SASrB,CAAA;IAED;;;;;;;OAOG;IACH,oBAA2B,MAAU;QAAEC,iBAAgBA;aAAhBA,WAAgBA,CAAhBA,sBAAgBA,CAAhBA,IAAgBA;YAAhBA,gCAAgBA;;QACtDA,MAAMA,CAACA,MAAMA,CAACA;YACbA,IAAIA,EAAEA,IAAIA;YACVA,SAASA,EAAEA,KAAKA;YAChBA,OAAOA,EAAEA,OAAOA;YAChBA,MAAMA,EAAEA,MAAMA;SACdA,CAACA,CAACA;IACJA,CAACA;IAPe,kBAAU,aAOzB,CAAA;IAED;;;;;;;OAOG;IACH,mBAA0B,MAAU;QAAEC,iBAAgBA;aAAhBA,WAAgBA,CAAhBA,sBAAgBA,CAAhBA,IAAgBA;YAAhBA,gCAAgBA;;QACrDA,MAAMA,CAACA,MAAMA,CAACA;YACbA,IAAIA,EAAEA,IAAIA;YACVA,SAASA,EAAEA,IAAIA;YACfA,OAAOA,EAAEA,OAAOA;YAChBA,MAAMA,EAAEA,MAAMA;SACdA,CAACA,CAACA;IACJA,CAACA;IAPe,iBAAS,YAOxB,CAAA;IAED;;;;;;OAMG;IACH,mBAA0B,MAAU;QACnCC,IAAMA,MAAMA,GAAGA,MAAMA,CAACA,MAAMA,CAACA,MAAMA,CAACA,cAAcA,CAACA,MAAMA,CAACA,CAACA,CAACA;QAE5DA,MAAMA,CAACA,SAASA,CAACA,MAAMA,EAAEA,MAAMA,CAACA,CAACA;IAClCA,CAACA;IAJe,iBAAS,YAIxB,CAAA;IAED;;;;;;OAMG;IACH,qBAA4B,CAAM,EAAE,CAAM;QACzCC,MAAMA,CAACA,CAACA,KAAKA,CAACA;YACbA,yBAAyBA;YACzBA,CAACA,CAACA,KAAKA,CAACA,IAAIA,CAACA,KAAKA,CAACA,CAACA,CAACA;IACvBA,CAACA;IAJe,mBAAW,cAI1B,CAAA;IAED;;;;;;;;;;OAUG;IACH,kBAAyB,QAAY,EAAE,MAAc;QAAEC,sBAAsBA;aAAtBA,WAAsBA,CAAtBA,sBAAsBA,CAAtBA,IAAsBA;YAAtBA,qCAAsBA;;QAC5EA,MAAMA,CAACA,YAAYA,CAACA,MAAMA;YACzBA;gBACC,IAAM,IAAI,GAAU,SAAS,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,YAAY,CAAC;gBAEjG,SAAS;gBACT,MAAM,CAAQ,QAAS,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YACvD,CAAC;YACDA;gBACC,SAAS;gBACT,MAAM,CAAQ,QAAS,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;YAC5D,CAAC,CAACA;IACJA,CAACA;IAZe,gBAAQ,WAYvB,CAAA;IAED;;;;;OAKG;IACH,eAAsB,MAAU;QAAEC,iBAAgBA;aAAhBA,WAAgBA,CAAhBA,sBAAgBA,CAAhBA,IAAgBA;YAAhBA,gCAAgBA;;QACjDA,MAAMA,CAACA,MAAMA,CAACA;YACbA,IAAIA,EAAEA,KAAKA;YACXA,SAASA,EAAEA,IAAIA;YACfA,OAAOA,EAAEA,OAAOA;YAChBA,MAAMA,EAAEA,MAAMA;SACdA,CAACA,CAACA;IACJA,CAACA;IAPe,aAAK,QAOpB,CAAA;IAED,iBAAwB,MAAmB;QAC1CC,IAAMA,IAAIA,GAAGA,MAAMA,CAACA,QAAQA,IAAIA,aAAGA,CAACA,gBAAgBA,CAACA,GAAGA,cAAcA,CAACA,WAAWA,GAAGA,cAAcA,CAACA,WAAWA,CAACA;QAEhHA,MAAMA,CAACA,IAAIA,IAAIA,CAACA,MAAMA,CAACA,CAACA;IACzBA,CAACA;IAJe,eAAO,UAItB,CAAA;IASD;;;;;;;OAOG;IACH,iBAAwB,cAAuC;QAAEC,sBAAsBA;aAAtBA,WAAsBA,CAAtBA,sBAAsBA,CAAtBA,IAAsBA;YAAtBA,qCAAsBA;;QACtFA,MAAMA,CAACA;YACN,IAAM,IAAI,GAAU,SAAS,CAAC,MAAM,GAAG,YAAY,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,YAAY,CAAC;YAEjG,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACzC,CAAC,CAACA;IACHA,CAACA;IANe,eAAO,UAMtB,CAAA;IAED;;;;;;;OAOG;IACH,sBAA6B,UAAsB;QAClDC,MAAMA,CAACA;YACNA,OAAOA,EAAEA;gBACR,IAAI,CAAC,OAAO,GAAG,cAAa,CAAC,CAAC;gBAC9B,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvB,CAAC;SACDA,CAACA;IACHA,CAACA;IAPe,oBAAY,eAO3B,CAAA;IAED;;;;;OAKG;IACH;QAAsCC,iBAAoBA;aAApBA,WAAoBA,CAApBA,sBAAoBA,CAApBA,IAAoBA;YAApBA,gCAAoBA;;QACzDA,MAAMA,CAACA,YAAYA,CAACA;YACnB,GAAG,CAAC,CAAe,UAAO,EAArB,mBAAU,EAAV,IAAqB,CAAC;gBAAtB,IAAI,MAAM,GAAI,OAAO,IAAX;gBACd,MAAM,CAAC,OAAO,EAAE,CAAC;aACjB;QACF,CAAC,CAACA,CAACA;IACJA,CAACA;IANe,6BAAqB,wBAMpC,CAAA","sourcesContent":["import has from './has';\nimport { Handle } from './interfaces';\nimport { PropertyEvent, Observer } from './observers/interfaces';\nimport * as ObjectObserver from './observers/ObjectObserver';\n\nconst slice = Array.prototype.slice;\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction isObject(item: any): boolean {\n\treturn Object.prototype.toString.call(item) === '[object Object]';\n}\n\nfunction copyArray(array: any[], inherited: boolean): any[] {\n\treturn array.map(function (item: any): any {\n\t\tif (Array.isArray(item)) {\n\t\t\treturn copyArray(item, inherited);\n\t\t}\n\n\t\treturn !isObject(item) ?\n\t\t\titem :\n\t\t\t_mixin({\n\t\t\t\tdeep: true,\n\t\t\t\tinherited: inherited,\n\t\t\t\tsources: [ item ],\n\t\t\t\ttarget: {}\n\t\t\t});\n\t});\n}\n\ninterface MixinArgs {\n\tdeep: boolean;\n\tinherited: boolean;\n\tsources: {}[];\n\ttarget: {};\n}\n\nfunction _mixin(kwArgs: MixinArgs): {} {\n\tconst deep = kwArgs.deep;\n\tconst inherited = kwArgs.inherited;\n\tconst target = kwArgs.target;\n\n\tfor (let source of kwArgs.sources) {\n\t\tfor (let key in source) {\n\t\t\tif (inherited || hasOwnProperty.call(source, key)) {\n\t\t\t\tlet value: any = (<any> source)[key];\n\n\t\t\t\tif (deep) {\n\t\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\t\tvalue = copyArray(value, inherited);\n\t\t\t\t\t}\n\t\t\t\t\telse if (isObject(value)) {\n\t\t\t\t\t\tvalue = _mixin({\n\t\t\t\t\t\t\tdeep: true,\n\t\t\t\t\t\t\tinherited: inherited,\n\t\t\t\t\t\t\tsources: [ value ],\n\t\t\t\t\t\t\ttarget: {}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t(<any> target)[key] = value;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn target;\n}\n\ninterface ObjectAssignConstructor extends ObjectConstructor {\n\tassign(target: {}, ...sources: {}[]): {};\n}\n\n/**\n * Copies the values of all enumerable own properties of one or more source objects to the target object.\n *\n * @param target The target object to receive values from source objects\n * @param sources Any number of objects whose enumerable own properties will be copied to the target object\n * @return The modified target object\n */\nexport const assign = has('object-assign') ?\n\t(<ObjectAssignConstructor> Object).assign :\n\tfunction (target: {}, ...sources: {}[]): {} {\n\t\treturn _mixin({\n\t\t\tdeep: false,\n\t\t\tinherited: false,\n\t\t\tsources: sources,\n\t\t\ttarget: target\n\t\t});\n\t};\n\n/**\n * Creates a new object from the given prototype, and copies all enumerable own properties of one or more\n * source objects to the newly created target object.\n *\n * @param prototype The prototype to create a new object from\n * @param mixins Any number of objects whose enumerable own properties will be copied to the created object\n * @return The new object\n */\nexport function create(prototype: {}, ...mixins: {}[]): {} {\n\tif (!mixins.length) {\n\t\tthrow new RangeError('lang.create requires at least one mixin object.');\n\t}\n\n\tconst args = mixins.slice();\n\targs.unshift(Object.create(prototype));\n\n\treturn assign.apply(null, args);\n}\n\n/**\n * Copies the values of all enumerable own properties of one or more source objects to the target object,\n * recursively copying all nested objects and arrays as well.\n *\n * @param target The target object to receive values from source objects\n * @param sources Any number of objects whose enumerable own properties will be copied to the target object\n * @return The modified target object\n */\nexport function deepAssign(target: {}, ...sources: {}[]): {} {\n\treturn _mixin({\n\t\tdeep: true,\n\t\tinherited: false,\n\t\tsources: sources,\n\t\ttarget: target\n\t});\n}\n\n/**\n * Copies the values of all enumerable (own or inherited) properties of one or more source objects to the\n * target object, recursively copying all nested objects and arrays as well.\n *\n * @param target The target object to receive values from source objects\n * @param sources Any number of objects whose enumerable properties will be copied to the target object\n * @return The modified target object\n */\nexport function deepMixin(target: {}, ...sources: {}[]): {} {\n\treturn _mixin({\n\t\tdeep: true,\n\t\tinherited: true,\n\t\tsources: sources,\n\t\ttarget: target\n\t});\n}\n\n/**\n * Creates a new object using the provided source's prototype as the prototype for the new object, and then\n * deep copies the provided source's values into the new target.\n *\n * @param source The object to duplicate\n * @return The new object\n */\nexport function duplicate(source: {}): {} {\n\tconst target = Object.create(Object.getPrototypeOf(source));\n\n\treturn deepMixin(target, source);\n}\n\n/**\n * Determines whether two values are the same value.\n *\n * @param a First value to compare\n * @param b Second value to compare\n * @return true if the values are the same; false otherwise\n */\nexport function isIdentical(a: any, b: any): boolean {\n\treturn a === b ||\n\t\t/* both values are NaN */\n\t\t(a !== a && b !== b);\n}\n\n/**\n * Returns a function that binds a method to the specified object at runtime. This is similar to\n * `Function.prototype.bind`, but instead of a function it takes the name of a method on an object.\n * As a result, the function returned by `lateBind` will always call the function currently assigned to\n * the specified property on the object as of the moment the function it returns is called.\n *\n * @param instance The context object\n * @param method The name of the method on the context object to bind to itself\n * @param suppliedArgs An optional array of values to prepend to the `instance[method]` arguments list\n * @return The bound function\n */\nexport function lateBind(instance: {}, method: string, ...suppliedArgs: any[]): (...args: any[]) => any {\n\treturn suppliedArgs.length ?\n\t\tfunction () {\n\t\t\tconst args: any[] = arguments.length ? suppliedArgs.concat(slice.call(arguments)) : suppliedArgs;\n\n\t\t\t// TS7017\n\t\t\treturn (<any> instance)[method].apply(instance, args);\n\t\t} :\n\t\tfunction () {\n\t\t\t// TS7017\n\t\t\treturn (<any> instance)[method].apply(instance, arguments);\n\t\t};\n}\n\n/**\n * Copies the values of all enumerable (own or inherited) properties of one or more source objects to the\n * target object.\n *\n * @return The modified target object\n */\nexport function mixin(target: {}, ...sources: {}[]): {} {\n\treturn _mixin({\n\t\tdeep: false,\n\t\tinherited: true,\n\t\tsources: sources,\n\t\ttarget: target\n\t});\n}\n\nexport function observe(kwArgs: ObserveArgs): Observer {\n\tconst Ctor = kwArgs.nextTurn && has('object-observe') ? ObjectObserver.Es7Observer : ObjectObserver.Es5Observer;\n\n\treturn new Ctor(kwArgs);\n}\n\nexport interface ObserveArgs {\n\tlistener: (events: PropertyEvent[]) => any;\n\tnextTurn?: boolean;\n\tonlyReportObserved?: boolean;\n\ttarget: {};\n}\n\n/**\n * Returns a function which invokes the given function with the given arguments prepended to its argument list.\n * Like `Function.prototype.bind`, but does not alter execution context.\n *\n * @param targetFunction The function that needs to be bound\n * @param suppliedArgs An optional array of arguments to prepend to the `targetFunction` arguments list\n * @return The bound function\n */\nexport function partial(targetFunction: (...args: any[]) => any, ...suppliedArgs: any[]): (...args: any[]) => any {\n\treturn function () {\n\t\tconst args: any[] = arguments.length ? suppliedArgs.concat(slice.call(arguments)) : suppliedArgs;\n\n\t\treturn targetFunction.apply(this, args);\n\t};\n}\n\n/**\n * Returns an object with a destroy method that, when called, calls the passed-in destructor.\n * This is intended to provide a unified interface for creating \"remove\" / \"destroy\" handlers for\n * event listeners, timers, etc.\n *\n * @param destructor A function that will be called when the handle's `destroy` method is invoked\n * @return The handle object\n */\nexport function createHandle(destructor: () => void): Handle {\n\treturn {\n\t\tdestroy: function () {\n\t\t\tthis.destroy = function () {};\n\t\t\tdestructor.call(this);\n\t\t}\n\t};\n}\n\n/**\n * Returns a single handle that can be used to destroy multiple handles simultaneously.\n *\n * @param handles An array of handles with `destroy` methods\n * @return The handle object\n */\nexport function createCompositeHandle(...handles: Handle[]): Handle {\n\treturn createHandle(function () {\n\t\tfor (let handle of handles) {\n\t\t\thandle.destroy();\n\t\t}\n\t});\n}\n"]}