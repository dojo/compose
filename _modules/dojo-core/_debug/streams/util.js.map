{"version":3,"file":"util.js","sourceRoot":"","sources":["util.ts"],"names":["getApproximateByteSize","invokeOrNoop","normalizeStrategy","promiseInvokeOrFallbackOrNoop","promiseInvokeOrNoop"],"mappings":"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CAACA,CAACA,CAACA;YACfA,MAAMA,CAACA,iBAAOA,CAACA,MAAMA,CAACA,KAAKA,CAACA,CAACA;QAC9BA,CAACA;QAEDA,EAAEA,CAACA,CAACA,CAACA,MAAMA,CAACA,CAACA,CAACA;YACbA,MAAMA,CAACA,mBAAmBA,CAACA,MAAMA,EAAEA,OAAOA,EAAEA,KAAKA,CAACA,CAACA;QACpDA,CAACA;QAEDA,EAAEA,CAACA,CAACA,CAACA,KAAKA,CAACA,CAACA,CAACA;YACZA,KAAKA,GAAGA,EAAEA,CAACA;QACZA,CAACA;QAEDA,IAAIA,CAACA;YACJA,MAAMA,CAACA,iBAAOA,CAACA,OAAOA,CAACA,MAAMA,CAACA,KAAKA,CAACA,MAAMA,EAAEA,KAAKA,CAACA,CAACA,CAACA;QACrDA,CACAA;QAAAA,KAAKA,CAACA,CAACA,KAAKA,CAACA,CAACA,CAACA;YACdA,MAAMA,CAACA,iBAAOA,CAACA,MAAMA,CAACA,KAAKA,CAACA,CAACA;QAC9BA,CAACA;IACFA,CAACA;IAxBe,qCAA6B,gCAwB5C,CAAA;IAED;;OAEG;IACH,6BAAoC,CAAM,EAAE,CAAS,EAAE,IAAgB;QAAhBC,oBAAgBA,GAAhBA,SAAgBA;QACtEA,IAAIA,MAAWA,CAACA;QAEhBA,IAAIA,CAACA;YACJA,MAAMA,GAAGA,CAACA,CAACA,CAACA,CAACA,CAACA;QACfA,CACAA;QAAAA,KAAKA,CAACA,CAACA,KAAKA,CAACA,CAACA,CAACA;YACdA,MAAMA,CAACA,iBAAOA,CAACA,MAAMA,CAACA,KAAKA,CAACA,CAACA;QAC9BA,CAACA;QAEDA,EAAEA,CAACA,CAACA,CAACA,MAAMA,CAACA,CAACA,CAACA;YACbA,MAAMA,CAACA,iBAAOA,CAACA,OAAOA,EAAEA,CAACA;QAC1BA,CAACA;QAEDA,IAAIA,CAACA;YACJA,MAAMA,CAACA,iBAAOA,CAACA,OAAOA,CAACA,MAAMA,CAACA,KAAKA,CAACA,CAACA,EAAEA,IAAIA,CAACA,CAACA,CAACA;QAC/CA,CACAA;QAAAA,KAAKA,CAACA,CAACA,KAAKA,CAACA,CAACA,CAACA;YACdA,MAAMA,CAACA,iBAAOA,CAACA,MAAMA,CAACA,KAAKA,CAACA,CAACA;QAC9BA,CAACA;IACFA,CAACA;IApBe,2BAAmB,sBAoBlC,CAAA","sourcesContent":["import { Strategy } from './interfaces';\nimport Promise from '../Promise';\n\n/*\nBased on sizeof.js by Stephen Morley\n\nA function to calculate the approximate memory usage of objects\n\nCreated by Stephen Morley - http://code.stephenmorley.org/ - and released under\nthe terms of the CC0 1.0 Universal legal code:\n\nhttp://creativecommons.org/publicdomain/zero/1.0/legalcode\n\nReturns the approximate memory usage, in bytes, of the specified object.\n*/\nexport function getApproximateByteSize(object: any): number {\n\tlet objects = [ object ];\n\tlet size = 0;\n\n\tfor (let index = 0; index < objects.length; index++) {\n\t\tswitch (typeof objects[index]) {\n\t\t\tcase 'boolean':\n\t\t\t\tsize += 4;\n\t\t\t\tbreak;\n\n\t\t\tcase 'number':\n\t\t\t\tsize += 8;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\t\tsize += 2 * objects[index].length;\n\t\t\t\tbreak;\n\n\t\t\tcase 'object':\n\t\t\t\t// if the object is not an array, add the sizes of the keys\n\t\t\t\tif (Object.prototype.toString.call(objects[index]) !== '[object Array]') {\n\t\t\t\t\tfor (let key in objects[index]) {\n\t\t\t\t\t\tsize += 2 * key.length;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// loop over the keys\n\t\t\t\tfor (let key in objects[index]) {\n\t\t\t\t\t// determine whether the value has already been processed\n\t\t\t\t\tlet processed = false;\n\n\t\t\t\t\tfor (let j = 0; j < objects.length; j++) {\n\t\t\t\t\t\tif (objects[j] === objects[index][key]) {\n\t\t\t\t\t\t\tprocessed = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// queue the value to be processed if appropriate\n\t\t\t\t\tif (!processed) {\n\t\t\t\t\t\tobjects.push(objects[index][key]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t}\n\t}\n\n\treturn size;\n}\n\n/**\n * Calls the method or returns undefined.\n */\nexport function invokeOrNoop(O: any, P: string, args: any[] = []): any {\n\tconst method: Function = O[P];\n\treturn method ? method.apply(O, args) : undefined;\n}\n\nexport function normalizeStrategy<T>({ size, highWaterMark = 1 }: Strategy<T>): Strategy<T> {\n\treturn <Strategy <T>> {\n\t\tsize: size,\n\t\thighWaterMark: highWaterMark > 0 ? highWaterMark : 1\n\t};\n}\n\nexport function promiseInvokeOrFallbackOrNoop(object: any, method1: string, args1: any[], method2: string, args2: any[] = []): Promise<any> {\n\tlet method: Function;\n\n\ttry {\n\t\tmethod = object[method1];\n\t}\n\tcatch (error ) {\n\t\treturn Promise.reject(error);\n\t}\n\n\tif (!method) {\n\t\treturn promiseInvokeOrNoop(object, method2, args2);\n\t}\n\n\tif (!args1) {\n\t\targs1 = [];\n\t}\n\n\ttry {\n\t\treturn Promise.resolve(method.apply(object, args1));\n\t}\n\tcatch (error) {\n\t\treturn Promise.reject(error);\n\t}\n}\n\n/**\n * Returns a promise that resolves the with result of the method call or undefined.\n */\nexport function promiseInvokeOrNoop(O: any, P: string, args: any[] = []): Promise<any> {\n\tlet method: any;\n\n\ttry {\n\t\tmethod = O[P];\n\t}\n\tcatch (error) {\n\t\treturn Promise.reject(error);\n\t}\n\n\tif (!method) {\n\t\treturn Promise.resolve();\n\t}\n\n\ttry {\n\t\treturn Promise.resolve(method.apply(O, args));\n\t}\n\tcatch (error) {\n\t\treturn Promise.reject(error);\n\t}\n}\n"]}