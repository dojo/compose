{"version":3,"file":"ByteLengthQueuingStrategy.js","sourceRoot":"","sources":["ByteLengthQueuingStrategy.ts"],"names":["ByteLengthQueuingStrategy","ByteLengthQueuingStrategy.constructor","ByteLengthQueuingStrategy.size"],"mappings":";;;;;;;;;;;;;IAAA,gCAA4B,mBAAmB,CAAC,CAAA;IAChD,qBAAuC,QAAQ,CAAC,CAAA;IAEhD;QAA0DA,6CAAkBA;QAA5EA;YAA0DC,8BAAkBA;QAS5EA,CAACA;QARAD,wCAAIA,GAAJA,UAAKA,KAAQA;YACZE,EAAEA,CAACA,CAAQA,KAAMA,CAACA,UAAUA,KAAKA,SAASA,CAACA,CAACA,CAACA;gBAC5CA,MAAMA,CAAQA,KAAMA,CAACA,UAAUA,CAACA;YACjCA,CAACA;YACDA,IAAIA,CAACA,CAACA;gBACLA,MAAMA,CAACA,6BAAsBA,CAACA,KAAKA,CAACA,CAACA;YACtCA,CAACA;QACFA,CAACA;QACFF,gCAACA;IAADA,CAACA,AATD,EAA0D,yBAAe,EASxE;IATD;+CASC,CAAA","sourcesContent":["import QueuingStrategy from './QueuingStrategy';\nimport { getApproximateByteSize } from './util';\n\nexport default class ByteLengthQueuingStrategy<T> extends QueuingStrategy<T> {\n\tsize(chunk: T): number {\n\t\tif ((<any> chunk).byteLength !== undefined) {\n\t\t\treturn (<any> chunk).byteLength;\n\t\t}\n\t\telse {\n\t\t\treturn getApproximateByteSize(chunk);\n\t\t}\n\t}\n}\n"]}