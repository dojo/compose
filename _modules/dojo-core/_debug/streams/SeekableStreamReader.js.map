{"version":3,"file":"SeekableStreamReader.js","sourceRoot":"","sources":["SeekableStreamReader.ts"],"names":["SeekableStreamReader","SeekableStreamReader.constructor","SeekableStreamReader.currentPosition","SeekableStreamReader.read","SeekableStreamReader.seek"],"mappings":"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","sourcesContent":["import Promise from '../Promise';\nimport ReadableStreamReader, { ReadResult } from './ReadableStreamReader';\nimport SeekableStream from './SeekableStream';\n\nexport default class SeekableStreamReader<T> extends ReadableStreamReader<T> {\n\tprotected _currentPosition: number = 0;\n\tprotected _ownerReadableStream: SeekableStream<T>;\n\n\tget currentPosition(): number {\n\t\treturn this._currentPosition;\n\t}\n\n\tread(): Promise<ReadResult<T>> {\n\t\treturn super.read().then((result: ReadResult<T>) => {\n\t\t\tif (!result.done) {\n\t\t\t\tlet chunkSize = 1;\n\n\t\t\t\ttry {\n\t\t\t\t\tif (this._ownerReadableStream.strategy && this._ownerReadableStream.strategy.size) {\n\t\t\t\t\t\tchunkSize = this._ownerReadableStream.strategy.size(result.value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch (error) {\n\t\t\t\t\tthis._ownerReadableStream.error(error);\n\n\t\t\t\t\treturn Promise.reject(error);\n\t\t\t\t}\n\n\t\t\t\tthis._currentPosition += chunkSize;\n\t\t\t}\n\n\t\t\treturn Promise.resolve(result);\n\t\t}, function (error: Error) {\n\t\t\treturn Promise.reject(error);\n\t\t});\n\t}\n\n\tseek(position: number): Promise<number> {\n\t\tif (position === this._currentPosition) {\n\t\t\treturn Promise.resolve(this._currentPosition);\n\t\t}\n\n\t\tif (position < this._currentPosition) {\n\t\t\tthis._ownerReadableStream.queue.empty();\n\t\t}\n\n\t\t// Drain the queue of any items prior to the desired seek position\n\t\twhile (position > this._currentPosition && this._ownerReadableStream.queue.length) {\n\t\t\tlet chunkSize = 1;\n\t\t\tlet chunk = this._ownerReadableStream.queue.dequeue();\n\n\t\t\tif (this._ownerReadableStream.strategy && this._ownerReadableStream.strategy.size) {\n\t\t\t\ttry {\n\t\t\t\t\tchunkSize = this._ownerReadableStream.strategy.size(chunk);\n\t\t\t\t}\n\t\t\t\tcatch (error) {\n\t\t\t\t\treturn Promise.reject(error);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._currentPosition += chunkSize;\n\t\t}\n\n\t\t// If there's anything left in the queue, we don't need to seek in the source, we can read from the queue\n\t\tif (this._ownerReadableStream.queue.length) {\n\t\t\treturn Promise.resolve(this._currentPosition);\n\t\t}\n\n\t\treturn this._ownerReadableStream.seek(position).then((position: number) => {\n\t\t\tthis._currentPosition = position;\n\n\t\t\treturn Promise.resolve(position);\n\t\t}, (error: Error) => {\n\t\t\treturn Promise.reject(error);\n\t\t});\n\t}\n}\n"]}